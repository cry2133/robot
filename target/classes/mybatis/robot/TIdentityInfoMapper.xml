<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.robot.robot.dao.TIdentityInfoDao">

	<select id="get" resultType="com.robot.robot.domain.TIdentityInfoDO">
		select `id`,`sex`,`name`,`identityID`,`nation`,`address`,`birth`,`phoneNumber`,`email` from t_identity_info where id = #{value}
	</select>

	<select id="list" resultType="com.robot.robot.domain.TIdentityInfoDO">
		select `id`,`sex`,`name`,`identityID`,`nation`,`address`,`birth`,`phoneNumber`,`email` from t_identity_info
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="sex != null and sex != ''"> and sex = #{sex} </if>
		  		  <if test="name != null and name != ''"> and name like #{name} </if>
		  		  <if test="identityID != null and identityID != ''"> and identityID = #{identityID} </if>
		  		  <if test="nation != null and nation != ''"> and nation = #{nation} </if>
		  		  <if test="address != null and address != ''"> and address = #{address} </if>
		  		  <if test="birth != null and birth != ''"> and birth = #{birth} </if>
		  		  <if test="phoneNumber != null and phoneNumber != ''"> and phoneNumber = #{phoneNumber} </if>
		  		  <if test="email != null and email != ''"> and email = #{email} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from t_identity_info
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="sex != null and sex != ''"> and sex = #{sex} </if>
		  		  <if test="name != null and name != ''"> and name like #{name} </if>
		  		  <if test="identityID != null and identityID != ''"> and identityID = #{identityID} </if>
		  		  <if test="nation != null and nation != ''"> and nation = #{nation} </if>
		  		  <if test="address != null and address != ''"> and address = #{address} </if>
		  		  <if test="birth != null and birth != ''"> and birth = #{birth} </if>
		  		  <if test="phoneNumber != null and phoneNumber != ''"> and phoneNumber = #{phoneNumber} </if>
		  		  <if test="email != null and email != ''"> and email = #{email} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.robot.robot.domain.TIdentityInfoDO" useGeneratedKeys="true" keyProperty="id">
		insert into t_identity_info
		(
			`sex`, 
			`name`, 
			`identityID`, 
			`nation`, 
			`address`, 
			`birth`, 
			`phoneNumber`, 
			`email`
		)
		values
		(
			#{sex}, 
			#{name}, 
			#{identityID}, 
			#{nation}, 
			#{address}, 
			#{birth}, 
			#{phoneNumber}, 
			#{email}
		)
	</insert>
	 
	<update id="update" parameterType="com.robot.robot.domain.TIdentityInfoDO">
		update t_identity_info 
		<set>
			<if test="sex != null">`sex` = #{sex}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="identityID != null">`identityID` = #{identityID}, </if>
			<if test="nation != null">`nation` = #{nation}, </if>
			<if test="address != null">`address` = #{address}, </if>
			<if test="birth != null">`birth` = #{birth}, </if>
			<if test="phoneNumber != null">`phoneNumber` = #{phoneNumber}, </if>
			<if test="email != null">`email` = #{email}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from t_identity_info where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from t_identity_info where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="selectByIdentityID" resultType="com.robot.robot.domain.TIdentityInfoDO"  parameterType="String">
		select `id`,`sex`,`name`,`identityID`,`nation`,`address`,`birth`,`phoneNumber`,`email` from t_identity_info where identityID = #{identityID}
	</select>
</mapper>